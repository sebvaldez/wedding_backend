app: wedding-backend
frameworkVersion: "3"

org: sebdev

service: wedding-backend

params:
  dev:
    profile: sebs-aws
    developer_email: valdez.sebastian4@gmail.com

package:
  individually: true # package each function individually
  patterns: ${file(resource_configs/package_exclusion_list.yml)}

custom:
  # todo - fetch of orchestrated services params
  # authorizer: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:auth-service-${self:provider.stage}-auth

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-west-2'}
  deploymentMethod: direct # default in v4 - https://www.serverless.com/framework/docs/providers/aws/guide/deploying
  environment:
    # aws ssm put-parameter --name cli-test --value helloWorldCli --type String
    # TEST_VAR: ${ssm(${self:custom.regionPreference}):cli-test}
    MEMBER_TABLE: ${self:service}-${self:opt.stage, self:provider.stage, 'dev'}-member-table
    MEMBER_TABLE_GSI_1: ${self:service}-${self:opt.stage, self:provider.stage, 'dev'}-member-table-GSI-1
  tags:
    project: ${self:service}
    environment: ${self:provider.stage}
    region: ${self:provider.region}
    runtime: ${self:provider.runtime}

layers:
  common:
    compatibleRuntimes:
      - nodejs18.x
    path: layers/common
    description: Templates or helpers that are not DTOs or Services
    retain: false # false is default, just adding for documentation
  coreServices:
    compatibleRuntimes:
      - nodejs18.x
    path: layers/coreServices
    description: NPM uuid & aws-skd, Services, and DTOs
    retain: false # false is default, just adding for documentation
  twilio:
    compatibleRuntimes:
      - nodejs18.x
    path: layers/twilio
    description: NPM Twillio package for texting
    retain: false # false is default, just adding for documentation
  sendGrid:
    compatibleRuntimes:
      - nodejs18.x
    path: layers/sendGrid
    description: NPM package including @sendgrid/mail
    retain: false # false is default, just adding for documentation

functions:
  # REST Lambda definitions
  - ${file(resource_configs/lambda_endpoints.yml)}
  - ${file(resource_configs/lambda_member_endpoints.yml)}
  - ${file(resource_configs/lambda_group_endpoints.yml)}

# CloudFront definitions
resources:
  - ${file(resource_configs/iam_roles.yml)}
  - ${file(resource_configs/iam_policies.yml)}
  - ${file(resource_configs/dynamo_db_member_table.yml)}
