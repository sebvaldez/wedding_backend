frameworkVersion: "3"

service: wedding-backend-auth-service

org: sebdev

plugins:
  - serverless-bundle

params:
  dev:
    profile: sebs-aws
    developer_email: valdez.sebastian4@gmail.com

custom:
  bundle:
    linting: false

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-west-2'}
  deploymentMethod: direct # default in v4 - https://www.serverless.com/framework/docs/providers/aws/guide/deploying
  memorySize: 128
  environment:
    AUTH0_PUBLIC_KEY: ${ssm(${self:provider.region}):auth0-public-key-${self:provider.stage}}
  tags:
    project: ${self:service}-auth
    environment: ${self:provider.stage}
    region: ${self:provider.region}
    runtime: ${self:provider.runtime}

functions:
  auth:
    handler: auth.handler
    environment:
      AUTH0_TENANT: ${ssm(${self:provider.region}):auth0_tenant_${self:provider.stage}}
      AUTH0_APPLICATION_BACKEND_AUDIENCE_ENV: ${ssm(${self:provider.region}):auth0_application_backend_audience_${self:provider.stage}}
      AUTH0_APPLICATION_FRONTEND_AUDIENCE_ENV: ${ssm(${self:provider.region}):auth0_application_frontend_audience_${self:provider.stage}}
    cors: true
  publicEndpoint:
    handler: public.handler
    events:
      - http:
          path: public
          method: POST
          cors: true
  privateEndpoint:
    handler: private.handler
    events:
      - http:
          path: private
          method: POST
          authorizer: auth
          cors: true

resources:
  Resources:
    # This response is needed for custom authorizer failures cors support ¯\_(ツ)_/¯
    GatewayResponse:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: EXPIRED_TOKEN
        RestApiId:
          Ref: "ApiGatewayRestApi"
        StatusCode: "401"
    AuthFailureGatewayResponse:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: "ApiGatewayRestApi"
        StatusCode: "401"
  Outputs:
    ApiGatewayRestApiId:
      Description: "API Gateway ID"
      Value:
        Ref: "ApiGatewayRestApi"
    ApiGatewayRootResourceId:
      Description: "API Gateway Root Resource ID"
      Value:
        Fn::GetAtt:
          - "ApiGatewayRestApi"
          - "RootResourceId"
    AuthApiGatewayAuthorizerId:
        Description: "Authorizer ID"
        Value:
          Ref: "AuthApiGatewayAuthorizer"
        Export:
          Name: "${self:service}-${self:provider.stage}-AuthAuthorizerId"
